name: Deploy Monitoring Tools to EC2

on:
  workflow_dispatch:

jobs:
  deploy-monitoring:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Decode PEM key
        run: |
          echo "${{ secrets.EC2_KEY_B64 }}" | base64 -d > homepem.pem
          chmod 600 homepem.pem

      - name: Upload Grafana provisioning files
        run: |
          scp -o StrictHostKeyChecking=no -i homepem.pem -r grafana ${{ secrets.EC2_USER_MON }}@${{ secrets.EC2_HOST_MON }}:/home/ubuntu/grafana

      - name: Upload Prometheus & AlertManager config
        run: |
          scp -i homepem.pem monitoring/prometheus/prometheus.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_MON }}:/home/ubuntu/prometheus.yml
          scp -i homepem.pem monitoring/alertmanager/alert.rules.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_MON }}:/home/ubuntu/alert.rules.yml
          scp -i homepem.pem monitoring/alertmanager/config.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_MON }}:/home/ubuntu/alertmanager.yml

      - name: Create Docker network
        run: |
          ssh -i homepem.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_MON }} "
            docker network inspect monitoring-net >/dev/null 2>&1 || docker network create monitoring-net
          "

      - name: Run Prometheus
        run: |
          ssh -i homepem.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_MON }} << EOF
          docker rm -f prometheus || true
          docker run -d \
            --name prometheus \
            --network monitoring-net \
            -p 9090:9090 \
            -v /home/ubuntu/prometheus.yml:/etc/prometheus/prometheus.yml \
            -v /home/ubuntu/alert.rules.yml:/etc/prometheus/alert.rules.yml \
            prom/prometheus
          EOF

      - name: Run Grafana
        run: |
          ssh -i homepem.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_MON }} << EOF
          docker rm -f grafana || true
          docker run -d \
            --name grafana \
            --network monitoring-net \
            -p 3000:3000 \
            -v /home/ubuntu/grafana/provisioning:/etc/grafana/provisioning \
            grafana/grafana
          EOF

      - name: Run AlertManager
        run: |
          ssh -i homepem.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_MON }} << EOF
          docker rm -f alertmanager || true
          docker run -d \
            --name alertmanager \
            --network monitoring-net \
            -p 9093:9093 \
            -v /home/ubuntu/alertmanager.yml:/etc/alertmanager/alertmanager.yml \
            prom/alertmanager
          EOF
