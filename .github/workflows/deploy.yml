name: Deploy (Blue-Green)

on:
  workflow_run:
    workflows: [ "Build & Push image" ]
    types: [ completed ]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-northeast-2
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

    steps:
      - name: Set color
        id: color
        run: |
          # 파란 → 초록 → 파란 … 토글
          STATE_FILE=color.txt
          COLOR=green
          if [ -f $STATE_FILE ] && [ "$(cat $STATE_FILE)" = "green" ]; then
            COLOR=blue
          fi
          echo $COLOR > $STATE_FILE
          echo "color=$COLOR" >> "$GITHUB_OUTPUT"

      - name: Switch containers
        env:
          COLOR:      ${{ steps.color.outputs.color }}
          IMAGE_TAG:  ${{ github.event.workflow_run.head_sha }}
        run: |
          OLD=$( [ "$COLOR" = "blue" ] && echo spring-green || echo spring-blue )
          
          ssh -o StrictHostKeyChecking=no -i ${{ github.workspace }}/homepem.pem \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} <<'EOF'
            set -e
            export COLOR="${{ env.COLOR }}"
            export IMAGE_TAG="${{ env.IMAGE_TAG }}"
            export ECR_REGISTRY="${{ env.ECR_REGISTRY }}"
          
            cd /home/ubuntu/blue-green
          
            # ─── 1) compose 파일에 태그값 주입 ───
            export IMAGE_TAG   # compose 가 env 변수 읽음
          
            # ─── 2) 새 색 Pull & Up ───
            docker compose -f docker-compose.bluegreen.yml pull spring-\$COLOR
            docker compose -f docker-compose.bluegreen.yml up -d --no-deps nginx spring-\$COLOR
          
            # ─── 3) Health check (최대 120초) ───
            for i in {1..40}; do
                status=\$(docker inspect -f '{{ .State.Health.Status }}' spring-\$COLOR || echo starting)
                [ "\$status" = "healthy" ] && break
                sleep 3
            done
            [ "\$status" = "healthy" ] || { echo 'Health FAIL'; docker logs spring-\$COLOR; exit 1; }
          
            # ─── 4) 스위치 ───
            docker compose -f docker-compose.bluegreen.yml exec nginx nginx -s reload
            docker compose -f docker-compose.bluegreen.yml stop \$OLD || true
          EOF
